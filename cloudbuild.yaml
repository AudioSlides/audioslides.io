steps:
# Load images for cachig
- name: 'gcr.io/cloud-builders/docker'
  args: [ 'pull', 'eu.gcr.io/$PROJECT_ID/audioslides-io:latest' ]
- name: 'gcr.io/cloud-builders/docker'
  args: [ 'pull', 'eu.gcr.io/$PROJECT_ID/audioslides-io:test-runner' ]
# Build test-runner image
- name: 'gcr.io/cloud-builders/docker'
  args: [
    'build',
    '-e', 'MIX_ENV=test',
    '--cache-from', 'eu.gcr.io/$PROJECT_ID/audioslides-io:test-runner',
    '-t', 'eu.gcr.io/$PROJECT_ID/audioslides-io:test-runner',
    '.' ]
# Run Tests with test-runner
- name: 'docker/compose:1.18.0'
  args: [ 'run',
    '-e', 'COVERALLS_REPO_TOKEN=$_COVERALLS_REPO_TOKEN',
    '--cache-from', 'eu.gcr.io/$PROJECT_ID/audioslides-io:test-runner',
    'test',
    'mix', 'coveralls.post',
    '--branch', '$BRANCH_NAME',
    '--sha', '$COMMIT_SHA'
    ]
# Build production image
- name: 'gcr.io/cloud-builders/docker'
  args: [
    'build',
    '--cache-from', 'eu.gcr.io/$PROJECT_ID/audioslides-io:latest',
    '-t', 'eu.gcr.io/$PROJECT_ID/audioslides-io:latest',
    '-t', 'eu.gcr.io/$PROJECT_ID/audioslides-io:prod',
    '.' ]
# publish following images
images:
- 'eu.gcr.io/$PROJECT_ID/audioslides-io:latest'
- 'eu.gcr.io/$PROJECT_ID/audioslides-io:prod'
- 'eu.gcr.io/$PROJECT_ID/audioslides-io:test-runner'